from aiogram import F, Router
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
import random
import config
import time

router = Router()

# –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–≥—Ä–æ–π —à–ø–∏–æ–Ω
async def start_message(message: Message, chat_id):
    btn = [[InlineKeyboardButton(text='üíî –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É üíî', callback_data='end_game')]] # –∫–Ω–æ–ø–∫–∏, –ø–æ–∫–∞ —Ç—É—Ç —Ç–æ–ª—å–∫–æ "–∑–∞–≤–µ—Ä—à–∏—Ç—å –∏–≥—Ä—É"
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, –µ—Å–ª–∏ –ª–æ–∫–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞
    btn.insert(0, [InlineKeyboardButton(text='–ì–æ–ª–æ—Å–æ–≤–∞—Ç—å', callback_data='vote')] if config.location[chat_id] else [])

    keyboard = InlineKeyboardMarkup(inline_keyboard=btn)
    await message.answer('–í—ã –∏–≥—Ä–∞–µ—Ç–µ "–®–ø–∏–æ–Ω"', reply_markup=keyboard)


@router.callback_query(F.data == "spy")
async def spy_handler(callback: CallbackQuery):
    chat_id = callback.message.chat.id

    config.current_game[chat_id] = "spy"
    participate_button = InlineKeyboardButton(text="–£—á–∞—Å—Ç–≤—É—é", callback_data="participate")
    start_game_spy_button = InlineKeyboardButton(text="–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="start_spy")
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[participate_button], [start_game_spy_button]])

    await callback.message.edit_text('–í—ã–±—Ä–∞–Ω–∞ –∏–≥—Ä–∞ "–®–ø–∏–æ–Ω"', reply_markup=keyboard)
    print(f'—á–∞—Ç {callback.message.chat.title} –Ω–∞—á–∞–ª –∏–≥—Ä—É "–®–ø–∏–æ–Ω"')

# —Å—Ç–∞—Ä—Ç –∏–≥—Ä—ã
@router.callback_query(F.data == "start_spy")
async def start_spy_handler(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    random.seed(time.time())  # –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–∏–¥ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –¥–ª—è –ª—É—á—à–µ–π —Ä–∞–Ω–¥–æ–º–Ω–æ—Å—Ç–∏

    if len(config.participants[chat_id]) >= 2: # –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –∏–≥—Ä–æ–∫–æ–≤
        # —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ —Å–ø–∏—Å–æ–∫ participants —Å who_list, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –≤—Å–µ –ª–∏ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å–ª–æ–≤–∞
        # –¥–∞–ª–µ–µ –æ–±–µ—Ä–Ω—É—Ç—å missing –≤ —Å–ø–∏—Å–æ–∫, —á—Ç–æ–±—ã —É–≤–µ–¥–æ–º–∏—Ç—å –∏–≥—Ä–æ–∫–æ–≤ –∫—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª
        missing = list(set(config.participants[chat_id].keys()) - set(config.who_list[chat_id].values()))
        if missing:
            for player in missing:
                await callback.bot.send_message(
                    chat_id,
                    text='—Ç–∞–º –±–∞–≥, –∫–æ—Ç–æ—Ä—ã–π –º–Ω–µ –ª–µ–Ω—å —Ñ–∏–∫—Å–∏—Ç—å, '
                         f'{config.href(player, config.participants[chat_id][player]["full_name"])}, –æ—Ç–ø—Ä–∞–≤—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –ª–æ–∫–∞—Ü–∏—é üî´',
                    parse_mode="HTML",
                    disable_web_page_preview=True
                )
            return

        # –≤—ã–±–æ—Ä —à–ø–∏–æ–Ω–∞
        spy = random.choice(list(config.participants[chat_id].keys()))
        config.participants[chat_id][spy]["is_spy"] = True
        for location, username in list(config.who_list[chat_id].items()):
            if username == spy:
                # —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–æ–∫–∞—Ü–∏–∏, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —à–ø–∏–æ–Ω–æ–º, —á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –≤—ã–ø–∞–ª–∞ –∏ –Ω–µ —Å–¥–µ–ª–∞–ª–∞ –∏–≥—Ä—É —à–ø–∏–æ–Ω–∞ –ª–µ–≥—á–µ
                config.who_list[chat_id].pop(location, None)
        await callback.bot.send_message(config.participants[chat_id][spy]["id"], text='—Ç—ã —à–ø–∏–æ–Ω')
        print(f'{config.participants[chat_id][spy]["full_name"]} —à–ø–∏–æ–Ω')

        config.location[chat_id] = random.choice(list(config.who_list[chat_id].keys())) # –≤—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
        print(f'–≤—ã–±—Ä–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è {config.location[chat_id]}')

        for player, values in config.participants[chat_id].items(): # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞–º –ª–æ–∫–∞—Ü–∏—é
            if player != spy: # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –≤—Å–µ–º –∫—Ä–æ–º–µ —à–ø–∏–æ–Ω–∞
                await callback.bot.send_message(values["id"], text=f'üåü –õ–æ–∫–∞—Ü–∏—è {config.location[chat_id]}')

        await callback.message.answer('–ª–æ–∫–∞—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º')
        await callback.bot.delete_message(chat_id, callback.message.message_id)
    else:
        await callback.bot.send_message(chat_id, text="–Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤")

# –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∞–≤–∏–ª –∏–≥—Ä—ã
async def send_rules(message):
    await message.answer(config.games['–®–ø–∏–æ–Ω'])

# –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
async def vote_func(callback, chat_id):
    # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ —Å –∏—Ö –ø–æ–ª–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=f'{user_data["full_name"]}',
                                    callback_data=f'{user_data["name"]}_vote')]
                                    for user_data in config.participants[chat_id].values()])

    for user, user_id in config.participants[chat_id].items(): # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –∏–≥—Ä–æ–∫—É –≤ –ª—Å
        await callback.bot.send_message(user_id["id"], '–ì–æ–ª–æ—Å–æ–≤–∞—Ç—å –∑–∞:', reply_markup=keyboard)

async def vote_for_handler(callback, group_chat_id, user): # user —ç—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–ª–æ—Å—É–µ—Ç
    voted_username = callback.data.replace('_vote', '')  # –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–∏–∫–∞ –∏–∑ –∫–æ–ª–ª–±—ç–∫–∞, —ç—Ç–æ –∏–≥—Ä–æ–∫ –∑–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –≥–æ–ª–æ—Å—É—é—Ç
    voted_full_name = config.participants[group_chat_id][voted_username]["full_name"]

    # –Ω–∞—Å—Ç–æ—è—â–∏–π —à–ø–∏–æ–Ω
    for player, data in config.participants[group_chat_id].items():
        if data['is_spy']:
            spy = player  # –Ω–∏–∫ —à–ø–∏–æ–Ω–∞
            spy_full_name = data["full_name"] # –ø–æ–ª–Ω–æ–µ –∏–º—è —à–ø–∏–æ–Ω–∞

            config.participants[group_chat_id][voted_username]["voted_people"].append(user.username)  # +1 –≥–æ–ª–æ—Å –∏–≥—Ä–æ–∫—É
            await callback.bot.send_message(group_chat_id,
                f'üî´ {config.href(user.username, user.full_name)} –≥–æ–ª–æ—Å—É–µ—Ç –∑–∞ {config.href(voted_username, voted_full_name)}',
                parse_mode="HTML", disable_web_page_preview=True)

            # –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –≥–æ–ª–æ—Å–æ–≤ –∑–∞ –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É
            if len(config.participants[group_chat_id][voted_username]["voted_people"]) >= len(config.participants[group_chat_id]) / 2:
                if voted_username == spy:  # —à–ø–∏–æ–Ω –ª–∏ –≤—ã–±—ã–≤—à–∏–π –∏–≥—Ä–æ–∫
                    await callback.bot.send_message(group_chat_id, f'–≤—ã –ø–æ–±–µ–¥–∏–ª–∏, {config.href(voted_username, voted_full_name)} —à–ø–∏–æ–Ω',
                        parse_mode="HTML", disable_web_page_preview=True)
                    print(f'—à–ø–∏–æ–Ω {voted_full_name} –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç')
                else:
                    await callback.bot.send_message(group_chat_id, f'{config.href(voted_username, voted_full_name)} –Ω–µ —à–ø–∏–æ–Ω\n'
                        f'{config.href(spy, spy_full_name)} –ø–æ–±–µ–∂–¥–∞–µ—Ç',
                        parse_mode="HTML", disable_web_page_preview=True)
                    print(f'—à–ø–∏–æ–Ω {spy_full_name} –ø–æ–±–µ–∂–¥–∞–µ—Ç')

                # —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º
                await callback.bot.delete_message(callback.message.chat.id, callback.message.message_id)
                await config.end_game_func(callback.message, group_chat_id)
                break

# –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏–∏
async def send_word_func(message: Message, chat_id, username, full_name):
    # –æ–¥–∏–Ω —Ä–∞–∑ –æ—Ç–¥–µ–ª–∏—Ç—å /sendword –æ—Ç —Å–ª–æ–≤ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    send_word_list = [word.strip() for word in message.text.split(maxsplit=1)[1].split(",")]
    common_words = list(set(send_word_list) & set(config.who_list[chat_id].keys()))  # –µ—Å—Ç—å –ª–∏ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–ª–æ–≤–∞
    if not common_words:
        for word in send_word_list:
            # –∫–ª—é—á —ç—Ç–æ —Å–ª–æ–≤–æ, –∞ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏—Ç—å –µ—â–µ —Å–ª–æ–≤
            config.who_list[chat_id][word] = username  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–≤ –≤ —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
    else:
        await message.answer(f'{common_words}\n—É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Å–ª–æ–≤, –æ—Ç–ø—Ä–∞–≤—å —á—Ç–æ —Ç–æ –µ—â–µ')
        return
    await message.answer("—Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω")
    await message.bot.send_message(chat_id, text=f'üåü {config.href(username, full_name)} –¥–æ–±–∞–≤–∏–ª —Å–ª–æ–≤–∞ üåü',
                           parse_mode="HTML", disable_web_page_preview=True)
    print(f"{full_name} –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ª–æ–≤–∞: {send_word_list}")